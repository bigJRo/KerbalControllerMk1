/********************************************************************************************************************************
  Modular Tester Code for Button Module on Kerbal Controller Mk1
  Licensed under the GNU General Public License v3.0 (GPL-3.0).
  Final code by J. Rostoker for Jeb's Controller Works.
********************************************************************************************************************************/

#include <Wire.h>

#define panel_addr 0x20

uint16_t button_state = 0;        // Current button states (16 bits)
uint16_t button_state_prev = 0;   // Previous button states for edge detection
uint16_t led_bits = 0;            // Current LED bitmask to send

void setup() {
  Serial.begin(115200);
  while (!Serial);

  Wire.begin();  // Join I2C bus as master

  Serial.println("I2C Master Manual LED Toggle Started");
}

void loop() {
  // Request 2 bytes from slave (button states)
  Wire.requestFrom(panel_addr, 2);

  if (Wire.available() == 2) {
    uint8_t btn_low = Wire.read();
    uint8_t btn_high = Wire.read();

    button_state = ((uint16_t)btn_high << 8) | btn_low;

    // Check each button for rising edge (0 -> 1)
    for (uint8_t i = 0; i < 16; i++) {
      bool curr = (button_state & (1 << i)) != 0;
      bool prev = (button_state_prev & (1 << i)) != 0;

      if (curr && !prev) {
        // Button i was just pressed, toggle LED i
        led_bits ^= (1 << i);
        Serial.print("Button ");
        Serial.print(i);
        Serial.print(" pressed, toggling LED ");
        Serial.println(i);
      }
    }

    button_state_prev = button_state;

    // Send updated LED bits to slave
    Wire.beginTransmission(panel_addr);
    Wire.write((uint8_t)(led_bits & 0xFF));        // LSB
    Wire.write((uint8_t)((led_bits >> 8) & 0xFF)); // MSB
    Wire.endTransmission();

    // Print current button and LED states
    Serial.print("Buttons: 0x");
    if (btn_high < 0x10) Serial.print('0');
    Serial.print(btn_high, HEX);
    if (btn_low < 0x10) Serial.print('0');
    Serial.print(btn_low, HEX);

    Serial.print("   LEDs: 0x");
    if ((led_bits >> 8) < 0x10) Serial.print('0');
    Serial.println(led_bits, HEX);
  } else {
    Serial.println("No data from slave");
  }

  delay(50);  // Small delay to debounce buttons and avoid flooding I2C bus
}
